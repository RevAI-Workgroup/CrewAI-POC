{
  "version": "1.0",
  "description": "JSON schema for generating forms to create CrewAI objects and LLM providers",
  "schemas": {
    "agent": {
      "category": "agent",
      "name": "Agent",
      "description": "A CrewAI agent that can perform tasks and collaborate with other agents",
      "relationships": {
        "belongsTo": ["crew"],
        "uses": ["llm", "tools"],
        "worksWith": ["task"]
      },
      "fields": {
        "name": {
          "type": "string",
          "required": false,
          "description": "Name of the agent",
          "defaultDisplayed": true,
          "placeholder": "Agent Name"
        },
        "role": {
          "type": "string",
          "required": true,
          "description": "The role description that defines the agent's identity and capabilities",
          "defaultDisplayed": true,
          "placeholder": "Senior Data Analyst"
        },
        "goal": {
          "type": "string",
          "required": true,
          "description": "The objective that the agent is trying to achieve",
          "defaultDisplayed": true,
          "placeholder": "Analyze data and provide insights"
        },
        "backstory": {
          "type": "string",
          "required": true,
          "description": "The background story that adds depth to the agent's character",
          "defaultDisplayed": true,
          "inputType": "textarea",
          "placeholder": "You have extensive experience in data analysis..."
        },
        "verbose": {
          "type": "boolean",
          "required": false,
          "description": "Enable detailed logging of agent actions",
          "defaultDisplayed": false,
          "default": false
        },
        "allow_delegation": {
          "type": "boolean",
          "required": false,
          "description": "Allow the agent to delegate tasks to other agents",
          "defaultDisplayed": true,
          "default": false
        },
        "max_iter": {
          "type": "number",
          "required": false,
          "description": "Maximum number of iterations for task execution",
          "defaultDisplayed": false,
          "default": 25,
          "min": 1,
          "max": 100
        },
        "max_rpm": {
          "type": "number",
          "required": false,
          "description": "Maximum requests per minute for this agent",
          "defaultDisplayed": false,
          "min": 1
        },
        "temperature": {
          "type": "number",
          "required": false,
          "description": "Creativity level for the agent's responses (0.0 to 2.0)",
          "defaultDisplayed": false,
          "min": 0.0,
          "max": 2.0,
          "step": 0.1
        },
        "llm": {
          "type": "reference",
          "required": false,
          "description": "Language model to be used by this agent",
          "defaultDisplayed": true,
          "referenceType": "llm",
          "placeholder": "Select an LLM"
        },
        "tools": {
          "type": "array",
          "required": false,
          "description": "List of tools available to this agent",
          "defaultDisplayed": true,
          "itemType": "reference",
          "referenceType": "tool",
          "placeholder": "Select tools"
        },
        "step_callback": {
          "type": "function",
          "required": false,
          "description": "Callback function executed after each step",
          "defaultDisplayed": false
        },
        "system_template": {
          "type": "string",
          "required": false,
          "description": "Custom system template for the agent",
          "defaultDisplayed": false,
          "inputType": "textarea"
        },
        "prompt_template": {
          "type": "string",
          "required": false,
          "description": "Custom prompt template for the agent",
          "defaultDisplayed": false,
          "inputType": "textarea"
        },
        "response_template": {
          "type": "string",
          "required": false,
          "description": "Custom response template for the agent",
          "defaultDisplayed": false,
          "inputType": "textarea"
        },
        "use_system_prompt": {
          "type": "boolean",
          "required": false,
          "description": "Whether to use system prompts",
          "defaultDisplayed": false,
          "default": true
        },
        "respect_context_window": {
          "type": "boolean",
          "required": false,
          "description": "Whether to respect the LLM's context window",
          "defaultDisplayed": false,
          "default": true
        }
      }
    },
    "crew": {
      "category": "crew",
      "name": "Crew",
      "description": "A group of agents working together to complete tasks",
      "relationships": {
        "contains": ["agent", "task"],
        "uses": ["llm"]
      },
      "fields": {
        "name": {
          "type": "string",
          "required": false,
          "description": "Name of the crew",
          "defaultDisplayed": true,
          "placeholder": "My Crew"
        },
        "agents": {
          "type": "array",
          "required": true,
          "description": "List of agents that are part of this crew",
          "defaultDisplayed": true,
          "itemType": "reference",
          "referenceType": "agent",
          "minItems": 1,
          "placeholder": "Select agents"
        },
        "tasks": {
          "type": "array",
          "required": true,
          "description": "List of tasks to be executed by the crew",
          "defaultDisplayed": true,
          "itemType": "reference",
          "referenceType": "task",
          "minItems": 1,
          "placeholder": "Select tasks"
        },
        "process": {
          "type": "enum",
          "required": false,
          "description": "The process flow that the crew will follow",
          "defaultDisplayed": true,
          "default": "sequential",
          "options": [
            {
              "value": "sequential",
              "label": "Sequential",
              "description": "Tasks are executed one after another"
            },
            {
              "value": "hierarchical",
              "label": "Hierarchical",
              "description": "Tasks are managed by a manager agent"
            }
          ]
        },
        "verbose": {
          "type": "boolean",
          "required": false,
          "description": "Enable detailed logging during execution",
          "defaultDisplayed": false,
          "default": false
        },
        "memory": {
          "type": "boolean",
          "required": false,
          "description": "Whether the crew should use memory to store execution memories",
          "defaultDisplayed": true,
          "default": false
        },
        "cache": {
          "type": "boolean",
          "required": false,
          "description": "Whether to cache tool execution results",
          "defaultDisplayed": false,
          "default": true
        },
        "max_rpm": {
          "type": "number",
          "required": false,
          "description": "Maximum requests per minute for crew execution",
          "defaultDisplayed": false,
          "min": 1
        },
        "manager_llm": {
          "type": "reference",
          "required": false,
          "description": "Language model for the manager agent (required for hierarchical process)",
          "defaultDisplayed": true,
          "referenceType": "llm",
          "placeholder": "Select manager LLM",
          "conditionalDisplay": {
            "field": "process",
            "value": "hierarchical"
          }
        },
        "manager_agent": {
          "type": "reference",
          "required": false,
          "description": "Custom manager agent (alternative to manager_llm)",
          "defaultDisplayed": false,
          "referenceType": "agent",
          "placeholder": "Select manager agent"
        },
        "function_calling_llm": {
          "type": "reference",
          "required": false,
          "description": "Language model for tool calling across all agents",
          "defaultDisplayed": false,
          "referenceType": "llm",
          "placeholder": "Select function calling LLM"
        },
        "planning": {
          "type": "boolean",
          "required": false,
          "description": "Enable crew execution planning",
          "defaultDisplayed": false,
          "default": false
        },
        "share_crew": {
          "type": "boolean",
          "required": false,
          "description": "Share crew information to help improve CrewAI",
          "defaultDisplayed": false,
          "default": false
        }
      }
    },
    "task": {
      "category": "task",
      "name": "Task",
      "description": "A specific task to be executed by an agent",
      "relationships": {
        "belongsTo": ["crew"],
        "assignedTo": ["agent"],
        "dependsOn": ["task"]
      },
      "fields": {
        "name": {
          "type": "string",
          "required": false,
          "description": "Name of the task",
          "defaultDisplayed": true,
          "placeholder": "Task Name"
        },
        "description": {
          "type": "string",
          "required": true,
          "description": "Detailed description of what the task should accomplish",
          "defaultDisplayed": true,
          "inputType": "textarea",
          "placeholder": "Analyze the provided dataset and identify key trends..."
        },
        "expected_output": {
          "type": "string",
          "required": true,
          "description": "Clear definition of the expected task outcome",
          "defaultDisplayed": true,
          "inputType": "textarea",
          "placeholder": "A comprehensive report with charts and insights..."
        },
        "agent": {
          "type": "reference",
          "required": false,
          "description": "Agent responsible for executing this task",
          "defaultDisplayed": true,
          "referenceType": "agent",
          "placeholder": "Select an agent"
        },
        "context": {
          "type": "array",
          "required": false,
          "description": "Other tasks whose output will be used as context",
          "defaultDisplayed": true,
          "itemType": "reference",
          "referenceType": "task",
          "placeholder": "Select context tasks"
        },
        "tools": {
          "type": "array",
          "required": false,
          "description": "Specific tools available for this task",
          "defaultDisplayed": true,
          "itemType": "reference",
          "referenceType": "tool",
          "placeholder": "Select tools"
        },
        "async_execution": {
          "type": "boolean",
          "required": false,
          "description": "Execute this task asynchronously",
          "defaultDisplayed": false,
          "default": false
        },
        "output_file": {
          "type": "string",
          "required": false,
          "description": "File path to save the task output",
          "defaultDisplayed": false,
          "placeholder": "/path/to/output.txt"
        },
        "output_json": {
          "type": "string",
          "required": false,
          "description": "Pydantic model name for structured JSON output",
          "defaultDisplayed": false,
          "placeholder": "MyOutputModel"
        },
        "output_pydantic": {
          "type": "string",
          "required": false,
          "description": "Pydantic model name for structured output",
          "defaultDisplayed": false,
          "placeholder": "MyOutputModel"
        },
        "human_input": {
          "type": "boolean",
          "required": false,
          "description": "Require human review of the final answer",
          "defaultDisplayed": false,
          "default": false
        },
        "markdown": {
          "type": "boolean",
          "required": false,
          "description": "Format output in Markdown",
          "defaultDisplayed": false,
          "default": false
        },
        "callback": {
          "type": "function",
          "required": false,
          "description": "Callback function executed after task completion",
          "defaultDisplayed": false
        }
      }
    }
  },
  "llmProviders": [
    {
      "category": "llm",
      "name": "OpenAI",
      "provider": "openai",
      "description": "OpenAI language models including GPT-4, GPT-3.5, and others",
      "fields": {
        "model": {
          "type": "enum",
          "required": true,
          "description": "OpenAI model to use",
          "defaultDisplayed": true,
          "default": "gpt-4o",
          "options": [
            {
              "value": "gpt-4o",
              "label": "GPT-4O",
              "description": "Latest GPT-4 Omni model"
            },
            {
              "value": "gpt-4o-mini",
              "label": "GPT-4O Mini",
              "description": "Smaller, faster GPT-4 model"
            },
            {
              "value": "gpt-4-turbo",
              "label": "GPT-4 Turbo",
              "description": "Enhanced GPT-4 with improved performance"
            },
            {
              "value": "gpt-4",
              "label": "GPT-4",
              "description": "Standard GPT-4 model"
            },
            {
              "value": "gpt-3.5-turbo",
              "label": "GPT-3.5 Turbo",
              "description": "Fast and efficient model"
            },
            {
              "value": "o1-preview",
              "label": "O1 Preview",
              "description": "Advanced reasoning model"
            },
            {
              "value": "o1-mini",
              "label": "O1 Mini",
              "description": "Compact reasoning model"
            }
          ]
        },
        "api_key": {
          "type": "string",
          "required": true,
          "description": "OpenAI API key for authentication",
          "defaultDisplayed": true,
          "inputType": "password",
          "placeholder": "sk-..."
        },
        "base_url": {
          "type": "string",
          "required": false,
          "description": "Custom base URL for OpenAI API",
          "defaultDisplayed": false,
          "placeholder": "https://api.openai.com/v1"
        },
        "temperature": {
          "type": "number",
          "required": false,
          "description": "Sampling temperature (0.0 to 2.0)",
          "defaultDisplayed": true,
          "default": 0.7,
          "min": 0.0,
          "max": 2.0,
          "step": 0.1
        },
        "max_tokens": {
          "type": "number",
          "required": false,
          "description": "Maximum tokens in the response",
          "defaultDisplayed": false,
          "min": 1,
          "max": 128000
        },
        "top_p": {
          "type": "number",
          "required": false,
          "description": "Nucleus sampling parameter",
          "defaultDisplayed": false,
          "min": 0.0,
          "max": 1.0,
          "step": 0.01
        },
        "frequency_penalty": {
          "type": "number",
          "required": false,
          "description": "Frequency penalty (-2.0 to 2.0)",
          "defaultDisplayed": false,
          "min": -2.0,
          "max": 2.0,
          "step": 0.1
        },
        "presence_penalty": {
          "type": "number",
          "required": false,
          "description": "Presence penalty (-2.0 to 2.0)",
          "defaultDisplayed": false,
          "min": -2.0,
          "max": 2.0,
          "step": 0.1
        },
        "timeout": {
          "type": "number",
          "required": false,
          "description": "Request timeout in seconds",
          "defaultDisplayed": false,
          "min": 1,
          "default": 60
        }
      }
    },
    {
      "category": "llm",
      "name": "Anthropic",
      "provider": "anthropic",
      "description": "Anthropic Claude models for advanced reasoning and conversation",
      "fields": {
        "model": {
          "type": "enum",
          "required": true,
          "description": "Anthropic Claude model to use",
          "defaultDisplayed": true,
          "default": "claude-3-5-sonnet-20241022",
          "options": [
            {
              "value": "claude-3-5-sonnet-20241022",
              "label": "Claude 3.5 Sonnet",
              "description": "Latest Claude 3.5 Sonnet model"
            },
            {
              "value": "claude-3-5-haiku-20241022",
              "label": "Claude 3.5 Haiku",
              "description": "Fast and efficient Claude model"
            },
            {
              "value": "claude-3-opus-20240229",
              "label": "Claude 3 Opus",
              "description": "Most capable Claude 3 model"
            },
            {
              "value": "claude-3-sonnet-20240229",
              "label": "Claude 3 Sonnet",
              "description": "Balanced Claude 3 model"
            },
            {
              "value": "claude-3-haiku-20240307",
              "label": "Claude 3 Haiku",
              "description": "Fastest Claude 3 model"
            }
          ]
        },
        "api_key": {
          "type": "string",
          "required": true,
          "description": "Anthropic API key for authentication",
          "defaultDisplayed": true,
          "inputType": "password",
          "placeholder": "sk-ant-..."
        },
        "base_url": {
          "type": "string",
          "required": false,
          "description": "Custom base URL for Anthropic API",
          "defaultDisplayed": false,
          "placeholder": "https://api.anthropic.com"
        },
        "temperature": {
          "type": "number",
          "required": false,
          "description": "Sampling temperature (0.0 to 1.0)",
          "defaultDisplayed": true,
          "default": 0.7,
          "min": 0.0,
          "max": 1.0,
          "step": 0.1
        },
        "max_tokens": {
          "type": "number",
          "required": false,
          "description": "Maximum tokens in the response",
          "defaultDisplayed": false,
          "min": 1,
          "max": 200000,
          "default": 4096
        },
        "top_p": {
          "type": "number",
          "required": false,
          "description": "Nucleus sampling parameter",
          "defaultDisplayed": false,
          "min": 0.0,
          "max": 1.0,
          "step": 0.01
        },
        "top_k": {
          "type": "number",
          "required": false,
          "description": "Top-k sampling parameter",
          "defaultDisplayed": false,
          "min": 1
        },
        "timeout": {
          "type": "number",
          "required": false,
          "description": "Request timeout in seconds",
          "defaultDisplayed": false,
          "min": 1,
          "default": 60
        }
      }
    },
    {
      "category": "llm",
      "name": "Ollama",
      "provider": "ollama",
      "description": "Local Ollama models for privacy-focused AI applications",
      "fields": {
        "model": {
          "type": "string",
          "required": true,
          "description": "Ollama model name (e.g., llama2, codellama, mistral)",
          "defaultDisplayed": true,
          "placeholder": "llama2"
        },
        "base_url": {
          "type": "string",
          "required": true,
          "description": "Ollama server URL",
          "defaultDisplayed": true,
          "default": "http://localhost:11434",
          "placeholder": "http://localhost:11434"
        },
        "temperature": {
          "type": "number",
          "required": false,
          "description": "Sampling temperature (0.0 to 2.0)",
          "defaultDisplayed": true,
          "default": 0.7,
          "min": 0.0,
          "max": 2.0,
          "step": 0.1
        },
        "num_predict": {
          "type": "number",
          "required": false,
          "description": "Maximum number of tokens to predict",
          "defaultDisplayed": false,
          "min": 1,
          "default": 128
        },
        "top_k": {
          "type": "number",
          "required": false,
          "description": "Top-k sampling parameter",
          "defaultDisplayed": false,
          "min": 1,
          "default": 40
        },
        "top_p": {
          "type": "number",
          "required": false,
          "description": "Nucleus sampling parameter",
          "defaultDisplayed": false,
          "min": 0.0,
          "max": 1.0,
          "step": 0.01,
          "default": 0.9
        },
        "repeat_penalty": {
          "type": "number",
          "required": false,
          "description": "Penalty for repeating tokens",
          "defaultDisplayed": false,
          "min": 0.0,
          "max": 2.0,
          "step": 0.1,
          "default": 1.1
        },
        "seed": {
          "type": "number",
          "required": false,
          "description": "Random seed for reproducible outputs",
          "defaultDisplayed": false,
          "min": 0
        },
        "timeout": {
          "type": "number",
          "required": false,
          "description": "Request timeout in seconds",
          "defaultDisplayed": false,
          "min": 1,
          "default": 60
        }
      }
    }
  ],
  "metadata": {
    "fieldTypes": {
      "string": "Text input field",
      "number": "Numeric input field",
      "boolean": "Checkbox or toggle",
      "enum": "Dropdown selection",
      "array": "Multi-select or dynamic list",
      "reference": "Reference to another object",
      "function": "Function or callback definition"
    },
    "inputTypes": {
      "text": "Single line text input",
      "textarea": "Multi-line text input",
      "password": "Password input (hidden text)",
      "number": "Number input with optional min/max",
      "checkbox": "Boolean checkbox",
      "select": "Dropdown selection",
      "multiselect": "Multiple selection"
    },
    "relationships": {
      "belongsTo": "This object belongs to another object",
      "contains": "This object contains other objects",
      "uses": "This object uses/references other objects",
      "worksWith": "This object collaborates with other objects",
      "assignedTo": "This object is assigned to another object",
      "dependsOn": "This object depends on other objects"
    },
    "reactFlowIntegration": {
      "nodeTypes": {
        "agent": {
          "color": "#3B82F6",
          "icon": "user",
          "category": "entities"
        },
        "crew": {
          "color": "#10B981", 
          "icon": "users",
          "category": "orchestration"
        },
        "task": {
          "color": "#F59E0B",
          "icon": "clipboard",
          "category": "execution"
        },
        "llm": {
          "color": "#8B5CF6",
          "icon": "brain",
          "category": "providers"
        }
      },
      "connectionRules": {
        "crew_to_agent": "One crew can contain multiple agents",
        "crew_to_task": "One crew can contain multiple tasks", 
        "task_to_agent": "One task can be assigned to one agent",
        "agent_to_llm": "One agent can use one LLM",
        "crew_to_llm": "One crew can use LLMs for manager/function calling",
        "task_to_task": "Tasks can depend on other tasks (context)",
        "task_to_tools": "Tasks can use specific tools"
      }
    }
  }
}
