"""Add node types tables including crew nodes

Revision ID: 9362a4f8e515
Revises: 7b415b971f41
Create Date: 2025-06-03 02:05:44.664407

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9362a4f8e515'
down_revision: Union[str, None] = '7b415b971f41'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('node_templates',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('type', sa.Enum('AGENT', 'TASK', 'TOOL', 'FLOW', 'CREW', name='nodetypeenum'), nullable=False),
    sa.Column('template_config', sa.JSON(), nullable=False),
    sa.Column('default_properties', sa.JSON(), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('is_official', sa.Boolean(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_node_templates_id'), 'node_templates', ['id'], unique=False)
    op.create_index(op.f('ix_node_templates_type'), 'node_templates', ['type'], unique=False)
    op.create_table('node_definitions',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('type', sa.Enum('AGENT', 'TASK', 'TOOL', 'FLOW', 'CREW', name='nodetypeenum'), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('position_x', sa.Integer(), nullable=True),
    sa.Column('position_y', sa.Integer(), nullable=True),
    sa.Column('node_metadata', sa.JSON(), nullable=True),
    sa.Column('configuration', sa.JSON(), nullable=True),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('graph_id', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['graph_id'], ['graphs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_node_definitions_id'), 'node_definitions', ['id'], unique=False)
    op.create_index(op.f('ix_node_definitions_type'), 'node_definitions', ['type'], unique=False)
    op.create_table('agent_nodes',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('role', sa.Text(), nullable=False),
    sa.Column('goal', sa.Text(), nullable=False),
    sa.Column('backstory', sa.Text(), nullable=False),
    sa.Column('llm', sa.String(length=100), nullable=True),
    sa.Column('memory', sa.Boolean(), nullable=True),
    sa.Column('verbose', sa.Boolean(), nullable=True),
    sa.Column('allow_delegation', sa.Boolean(), nullable=True),
    sa.Column('max_iter', sa.Integer(), nullable=True),
    sa.Column('max_rpm', sa.Integer(), nullable=True),
    sa.Column('max_execution_time', sa.Integer(), nullable=True),
    sa.Column('tools', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['node_definitions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agent_nodes_id'), 'agent_nodes', ['id'], unique=False)
    op.create_table('crew_nodes',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('agent_ids', sa.JSON(), nullable=False),
    sa.Column('task_ids', sa.JSON(), nullable=False),
    sa.Column('process', sa.Enum('SEQUENTIAL', 'HIERARCHICAL', name='processtypeenum'), nullable=True),
    sa.Column('verbose', sa.Boolean(), nullable=True),
    sa.Column('memory', sa.Boolean(), nullable=True),
    sa.Column('cache', sa.Boolean(), nullable=True),
    sa.Column('max_rpm', sa.Integer(), nullable=True),
    sa.Column('max_execution_time', sa.Integer(), nullable=True),
    sa.Column('output_log_file', sa.String(length=500), nullable=True),
    sa.Column('full_output', sa.Boolean(), nullable=True),
    sa.Column('step_callback', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['node_definitions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_crew_nodes_id'), 'crew_nodes', ['id'], unique=False)
    op.create_table('flow_nodes',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('flow_type', sa.Enum('SEQUENTIAL', 'HIERARCHICAL', name='processtypeenum'), nullable=False),
    sa.Column('entry_point', sa.Boolean(), nullable=True),
    sa.Column('exit_point', sa.Boolean(), nullable=True),
    sa.Column('conditions', sa.JSON(), nullable=True),
    sa.Column('routing_rules', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['node_definitions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_flow_nodes_id'), 'flow_nodes', ['id'], unique=False)
    op.create_table('node_connections',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('source_id', sa.String(), nullable=False),
    sa.Column('target_id', sa.String(), nullable=False),
    sa.Column('edge_type', sa.String(length=50), nullable=True),
    sa.Column('label', sa.String(length=255), nullable=True),
    sa.Column('properties', sa.JSON(), nullable=True),
    sa.Column('graph_id', sa.String(), nullable=True),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['graph_id'], ['graphs.id'], ),
    sa.ForeignKeyConstraint(['source_id'], ['node_definitions.id'], ),
    sa.ForeignKeyConstraint(['target_id'], ['node_definitions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_node_connections_id'), 'node_connections', ['id'], unique=False)
    op.create_table('task_nodes',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('expected_output', sa.Text(), nullable=False),
    sa.Column('agent_id', sa.String(), nullable=True),
    sa.Column('async_execution', sa.Boolean(), nullable=True),
    sa.Column('human_input', sa.Boolean(), nullable=True),
    sa.Column('output_format', sa.Enum('RAW', 'JSON', 'PYDANTIC', 'FILE', name='outputformatenum'), nullable=True),
    sa.Column('output_file', sa.String(length=500), nullable=True),
    sa.Column('callback', sa.String(length=255), nullable=True),
    sa.Column('tools', sa.JSON(), nullable=True),
    sa.Column('context_task_ids', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['agent_id'], ['node_definitions.id'], ),
    sa.ForeignKeyConstraint(['id'], ['node_definitions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_task_nodes_id'), 'task_nodes', ['id'], unique=False)
    op.create_table('tool_nodes',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('tool_type', sa.String(length=100), nullable=False),
    sa.Column('is_custom', sa.Boolean(), nullable=True),
    sa.Column('parameters', sa.JSON(), nullable=True),
    sa.Column('function_name', sa.String(length=255), nullable=True),
    sa.Column('api_endpoint', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['node_definitions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tool_nodes_id'), 'tool_nodes', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_tool_nodes_id'), table_name='tool_nodes')
    op.drop_table('tool_nodes')
    op.drop_index(op.f('ix_task_nodes_id'), table_name='task_nodes')
    op.drop_table('task_nodes')
    op.drop_index(op.f('ix_node_connections_id'), table_name='node_connections')
    op.drop_table('node_connections')
    op.drop_index(op.f('ix_flow_nodes_id'), table_name='flow_nodes')
    op.drop_table('flow_nodes')
    op.drop_index(op.f('ix_crew_nodes_id'), table_name='crew_nodes')
    op.drop_table('crew_nodes')
    op.drop_index(op.f('ix_agent_nodes_id'), table_name='agent_nodes')
    op.drop_table('agent_nodes')
    op.drop_index(op.f('ix_node_definitions_type'), table_name='node_definitions')
    op.drop_index(op.f('ix_node_definitions_id'), table_name='node_definitions')
    op.drop_table('node_definitions')
    op.drop_index(op.f('ix_node_templates_type'), table_name='node_templates')
    op.drop_index(op.f('ix_node_templates_id'), table_name='node_templates')
    op.drop_table('node_templates')
    # ### end Alembic commands ###
